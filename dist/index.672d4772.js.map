{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n  }\n\n  _setDescription() {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = 'cycling';\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    this.calcSpeed();\n    this._setDescription();\n  }\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n// example:\n// const run1 = new Running([39, -12], 5.2, 24, 178);\n// const cycling1 = new Cycling([39, -12], 27, 95, 523);\n// console.log(run1);\n// console.log(cycling1);\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\n///////////////////////////////////////////////////////\n// APPLICATION ARCHITECTURE ----------------------\nclass App {\n  #map;\n  #mapEvent;\n  #workouts = [];\n  #mapZoom = 13;\n  constructor() {\n    this._getPosition();\n\n    // GET DATA FROM LOCAL STORAGE\n    this._getLocalStorage();\n    // LISTENING TO EVENTS RIGHT AFTER CREATION\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    // Changing form's input field depending on type of workout\n    inputType.addEventListener('change', this._toggleElevationField.bind(this));\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n  }\n\n  _getPosition() {\n    // Geolocation API\n    // takes 2 callback functions: 1st - success case, 2nd - error case\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert('Could not get your position');\n        }\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    const coords = [latitude, longitude];\n\n    this.#map = L.map('map').setView(coords, this.#mapZoom);\n\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n    // Creating initial marker showing current location\n    L.marker(coords).addTo(this.#map).bindPopup('Hi there!').openPopup();\n    // Adding already existing markers\n    this.#workouts.forEach(w => this._renderWorkoutMarker(w));\n    // Handling clicks on map\n    // like an EventListener, just created specifically for map\n    this.#map.on('click', this._showForm.bind(this));\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n    //console.log(mapEvent);\n    // const { lat, lng } = mapEvent.latlng;\n    // L.marker([lat, lng])\n    //   .addTo(map)\n    //   .bindPopup(\n    //     L.popup({\n    //       maxWidth: 250,\n    //       minWidth: 100,\n    //       autoClose: false,\n    //       closeOnClick: false,\n    //       className: 'running-popup',\n    //     })\n    //   )\n    //   .setPopupContent('Workout')\n    //   .openPopup();\n  }\n  _hideForm() {\n    // Clear input fields\n    inputDistance.value =\n      inputDuration.value =\n      inputElevation.value =\n      inputCadence.value =\n        '';\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    e.preventDefault();\n    // helper functions:\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    // Get data from a form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If activity- running, create running obj\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      // Check if data is valid\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert('Inputs have to be positive numbers!');\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If activity - cycling - create cycling obj\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      // Check if data is valid\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert('Inputs have to be positive numbers!');\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Add new object to workout array\n    this.#workouts.push(workout);\n    // Render workout on map as a marker\n    this._renderWorkoutMarker(workout);\n    // Render workout on a list\n    this._renderWorkout(workout);\n    // Hide form from UI\n    this._hideForm();\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    let html = `<li class=\"workout workout--${workout.type}\" data-id=\"${\n      workout.id\n    }\">\n    <h2 class=\"workout__title\">${workout.description}</h2>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">${\n        workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n      }</span>\n      <span class=\"workout__value\">${workout.distance}</span>\n      <span class=\"workout__unit\">km</span>\n    </div>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">⏱</span>\n      <span class=\"workout__value\">${workout.duration}</span>\n      <span class=\"workout__unit\">min</span>\n    </div>\n   \n    `;\n\n    if (workout.type === 'running')\n      html += `\n    <div class=\"workout__details\">\n        <span class=\"workout__icon\">⚡️</span>\n        <span class=\"workout__value\">${workout.pace}</span>\n        <span class=\"workout__unit\">km/h</span>\n    </div>\n    <div class=\"workout__details\">\n        <span class=\"workout__icon\">🦶🏼</span>\n        <span class=\"workout__value\">${workout.cadence}</span>\n        <span class=\"workout__unit\">m</span>\n    </div>\n    <button class=\"workout_delete\">❌</button>\n  </li>`;\n\n    if (workout.type === 'cycling')\n      html += `\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">⚡️</span>\n        <span class=\"workout__value\">${workout.speed}</span>\n        <span class=\"workout__unit\">min/km</span>\n      </div>\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">⛰</span>\n        <span class=\"workout__value\">${workout.elevationGain}</span>\n        <span class=\"workout__unit\">spm</span>\n      </div>\n      <button class=\"delete\">❌</button>\n    </li>`;\n\n    form.insertAdjacentHTML('afterend', html);\n    const deleteBtns = document.querySelectorAll('.delete');\n    deleteBtns.forEach(btn =>\n      btn.addEventListener('click', this._deleteWorkout.bind(this))\n    );\n    console.log(deleteBtns);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(w => w.id === workoutEl.dataset.id);\n    // move the map to workout place\n    // setView() needs 2 arguments: 1st - coords where to move, 2nd - zoom level. 3rd is optional - object with options\n    this.#map.setView(workout.coords, this.#mapZoom, {\n      animate: true,\n      pan: { duration: 1 },\n    });\n\n    // using publis interface\n    //workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n    if (!data) return;\n    this.#workouts = data;\n    this.#workouts.forEach(w => this._renderWorkout(w));\n  }\n\n  _deleteWorkout(e) {\n    const workoutEl = e.target.closest('.workout');\n    console.log(workoutEl);\n    const index = this.#workouts.findIndex(w => w.id === workoutEl.dataset.id);\n    console.log(index);\n    this.#workouts = this.#workouts.splice(index, 1);\n    console.log(this.#workouts);\n    this._setLocalStorage();\n    this._getLocalStorage();\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}